#ifndef _IMPLICANT_H
#define _IMPLICANT_H

//struct minterm;
////=================================================================================================================
//struct chart;
////=================================================================================================================
//typedef struct chart Chart;                      //create alias of struct chart
//typedef struct minterm Minterm;                  //create alias
//static Minterm *pImplicant = NULL;               //make primeIMplicant global and static
//static int pIndex = 0 , pSize = 0;
//static int INPUTS = 0;
////=================================================================================================================
//int CountLiterals(char *path);
////=================================================================================================================
//void CopyLiteral(char *file, Minterm *min , int minSize);
////=================================================================================================================
//void setBitsNDeci(Minterm *min , int count);
////=================================================================================================================
//void setBits(Minterm *min, int count);
////=================================================================================================================
//int getRequiredMemory(Minterm *min , int arraySize);
////=================================================================================================================
//void combineTerms(Minterm *min,int minSize, Minterm *nextMin );
////=================================================================================================================
//int checkDashAlignment(char *a, char *b);
////=================================================================================================================
//void AllocateLiterals(Minterm *min , int minSize);
////=================================================================================================================
//int isSimilar(char *a, char *b);
////=================================================================================================================
//int isOneBitChange(char *a, char *b);
////=================================================================================================================
//void removeSimilar(Minterm *min , int arraySize);
////=================================================================================================================
//int getPrimeImplicantSize(Minterm *min , int minSize);
////=================================================================================================================
//void getPrimeImplicant(Minterm *min , int minSize);
//void freeLiterals(Minterm *min , int minSize);
//int getInputSize(char *path);
////=================================================================================================================
//int getChartSize(Minterm *min , int minSize);
////=================================================================================================================
//void setChart(Chart *c , int cSize , Minterm *min, int minSize);
////=================================================================================================================
//int isSolvedChart(Chart *c , int cSize);
////=================================================================================================================
//int findMax(Minterm *min , int mSize);
////=================================================================================================================
//void solveChart(Chart *c , int cSize);
////=================================================================================================================
//void freeChart(Chart *c , int chartSize);
////=================================================================================================================
//void PrintList( const List L );
////=================================================================================================================
//void PrintInfo();

#endif
